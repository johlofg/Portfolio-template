import {React, useState} from 'react'
import { useDispatch } from 'react-redux'
import user from '../reducers/user'
import uniqid from 'uniqid'
import styled from 'styled-components'

const AddProject = () => {
const dispatch = useDispatch()
const [newName, setNewName] = useState('')
// const [addingProject, setAddingProject] = useState(false)

// const MainDash = styled.div`
// position:fixed;
// top: 0;
// left: 0;
// width: 100%;
// height: 100vh;
// z-index: 10;
// background: rgba(0,0,0,0.75);
// `
// const AddProjectForm = styled.form `
//     display:flex;
//     align-items: center;
//     justify-content: center;
//     flex-direction: column;

//     position: fixed;
//     z-index: 100;
//     top: 30vh;
//     left: 10%; 
//     right:10%;
//     width: 50%;
//     background-color: #4eadf5;
//     border-radius: 25px;
//     overflow: hidden;
//     padding: 5%;    
//   `
  // const BtnContainer = styled.div`
  // display: flex;
  // flex-direction: row;  
  // justify-content: space-evenly;
  // width: 40%;
  // margin-top: 15px;
  // `
  const AddBtn = styled.button`
  background-color: green;
  color: #fff;
  border-radius: 3px;
  height: 25px;
  width: 45px;
  :active {
    background-color: #4caf4c;
  }
  :hover {
    box-shadow: 2px 2px 2px grey;
  }
`
// const CancelBtn = styled.button`
// background-color: red;
//   color: #fff;
//   border-radius: 3px;
//   height: 25px;
//   width: fit-content;

//   :active {
//     background-color: #a54e4e;
//   }
//   :hover {
//     box-shadow: 2px 2px 2px grey;
//   }
// `
// const AddNewBtn = styled.button`
//   background-color: #4eadf5;
//   color: #fff;
//   border-radius: 3px;
//   height: fit-content;
//   width: fit-content;

//   :active {
//     background-color: #92ccf7;
//   }
//   :hover {
//     box-shadow: 2px 2px 2px grey;
//   }
// `

const addProjects = (event) => {  
    event.preventDefault()    
    // const localStorageProjects = localStorage.getItem('user')    
    const newProject = {
      // ...JSON.parse(localStorageProjects),    
      id: uniqid(),
      name: newName,        
    }    
    // localStorage.setItem('user',JSON.stringify([...action.payload])) 
    dispatch(user.actions.addProject(newProject))
    setNewName('')  
    // setAddingProject(!addingProject)  
}

// const toggleModal = () =>{
//   setAddingProject(!addingProject)
// }


  return (
    <>
      {/* <AddNewBtn type='button' onClick={toggleModal}>Add new project</AddNewBtn>
        {addingProject === true && 
          <MainDash>             */}
            <form className='add-project' onSubmit={addProjects}> 
              <label>Customer:</label>      
              <input
                type="text"
                value={newName}
                onChange={(event) => setNewName(event.target.value)}>
              </input>
              {/* <BtnContainer> */}
                <AddBtn 
                  type="submit"            
                  disabled={!newName}>
                    Add
                </AddBtn>
                {/* <CancelBtn type="button" onClick={toggleModal}>
                  Cancel
                </CancelBtn>
              </BtnContainer> */}
            </form>        
          {/* </MainDash>} */}
      </>
  )
}

export default AddProject